name: batch-bleeding_edge-weekly
defaults:
  run:
    shell: C:\shells\msys2bash.cmd {0}
on:
  workflow_dispatch:
  schedule:
  - cron: '1 1 * * 4'

jobs:
  ffmpeg:
    needs: [lame, libvorbis_aotuv, opus, ffnvcodec, vapoursynth]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pacman -Sy nasm git --noconfirm
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.1.14.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-65-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd ffmpeg; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf -p PKGBUILD-git
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffmpeg/*pkg*.xz
        tag: bleeding_edge
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffmpeg/*.zst
        tag: bleeding_edge
        overwrite: true
        file_glob: true

  ffnvcodec:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd ffnvcodec-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: ffnvcodec*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffnvcodec-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  freetype2:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd freetype2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: freetype2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: freetype2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  fribidi:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pypath=$(cygpath -u $pythonLocation)
        cd fribidi-dev; PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: fribidi*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fribidi-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  harfbuzz:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pypath=$(cygpath -u $pythonLocation)
        cd harfbuzz-dev; PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: harfbuzz*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: harfbuzz-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  lame:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pacman -Sy nasm --noconfirm
        cd lame-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lame*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lame-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  lcms2:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd lcms2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lcms2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lcms2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libass:
    needs: [freetype2, fribidi, harfbuzz]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pacman -Sy nasm --noconfirm
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.13.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.3.0-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libass-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libass*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libass-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libbluray:
    needs: [freetype2]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.13.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libbluray-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libbluray*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libbluray-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdovi:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYS2_PATH_TYPE: inherit
        MSYSTEM: UCRT64
      run: |
        # skip building cargo-c
        # cargo install cargo-c --features=vendored-openssl
        rustup toolchain install stable-x86_64-pc-windows-gnu
        rustup default stable-x86_64-pc-windows-gnu
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        7z x cargo-c-windows-gnu.zip -o/c/Users/runneradmin/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin
        curl -OL https://github.com/quietvoid/dovi_tool/archive/refs/tags/libdovi-3.2.0.zip
        7z x libdovi*.zip
        cd dovi_tool-libdovi*
        cd dolby_vision
        mkdir build
        export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1
        cargo cinstall --manifest-path=Cargo.toml --prefix=/opt --destdir=build --release --library-type staticlib
        cd ../../libdovi-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdovi*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdovi-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdcss:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd libdvdcss-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdcss*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdcss-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdnav-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdnav*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdnav-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdread*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdread-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libogg:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libogg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libogg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libplacebo:
    needs: [lcms2, libdovi, shaderc, spirv-cross, vulkan]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja mako
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pacman -Sy git --noconfirm
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        pypath=$(cygpath -u $pythonLocation)
        cd libplacebo-dev; PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libplacebo*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libplacebo-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvorbis_aotuv*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvorbis_aotuv-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  luajit:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd luajit; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: luajit*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Delete Dev
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: luajit*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: luajit/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: luajit/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  mpv:
    needs: [ffmpeg, luajit, libass, lcms2, libbluray, libdovi, libdvdnav, shaderc, spirv-cross, vulkan]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja mako
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pypath=$(cygpath -u $pythonLocation)
        pacman -Sy autoconf-wrapper automake-wrapper libtool nasm yasm git --noconfirm
        curl -OL https://github.com/${{ github.repository }}/releases/download/bleeding_edge/ffmpeg-git-dev-6.2pre-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit-dev-2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.1.14.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-65-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.13.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.17.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin makepkg-mcf -sLf -p PKGBUILD-git
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv/*pkg*.xz
        tag: bleeding_edge
        overwrite: true
        file_glob: true

  mpv-stablelib:
    needs: [luajit, libass, lcms2, libbluray, libdovi, libdvdnav, shaderc, spirv-cross, vulkan]
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja mako
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        pypath=$(cygpath -u $pythonLocation)
        pacman -Sy yasm git --noconfirm
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-6.1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit-dev-2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.1.14.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-65-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.13.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.17.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin makepkg-mcf -sLf -p PKGBUILD-stablelib
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv/*pkg*.xz
        tag: bleeding_edge
        overwrite: true
        file_glob: true

  opus:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd opus-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: opus*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: opus-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  package:
    needs: [mpv, python-embed]
    runs-on: windows-2019
    steps:
    - name: Cache msys2
      uses: actions/cache@main
      id: msys2
      with:
        path: D:\msys64
        key: msys2
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Package
      run: |
        date=$(date +%Y%m%d)
        curl -OL https://github.com/${{ github.repository }}/releases/download/bleeding_edge/ffmpeg-git-6.2pre-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/luajit-2.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/vapoursynth-65-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/bleeding_edge/mpv-git-0.38pre-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mcfgthread-20231222-1-x86_64.pkg.tar.xz
        pacman -U *.xz --noconfirm
        mkdir -p /opt/bin/portable_config
        7z a All-in-One-MPV-git-withoutPython-$date.7z /opt/bin/*
        cp All-in-One-MPV-git-withoutPython-$date.7z All-in-One-MPV-git-withoutPython-latest.7z
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/python-embed-3.11.7-1-x86_64.pkg.tar.xz
        pacman -U python* --noconfirm
        7z a All-in-One-MPV-git-$date.7z /opt/bin/*
        cp All-in-One-MPV-git-$date.7z All-in-One-MPV-git-latest.7z
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: All*.7z
        tag: bleeding_edge
        overwrite: true
        file_glob: true

  python-embed:
    runs-on: windows-2019
    steps:
    - name: Cache msys2
      uses: actions/cache@main
      id: msys2
      with:
        path: D:\msys64
        key: msys2
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd python-embed; makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: python-embed*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: python-embed/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true

  shaderc:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      run: |
        cd shaderc-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: shaderc*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: shaderc-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  spirv-cross:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      run: |
        cd spirv-cross-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: spirv-cross*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: spirv-cross-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vapoursynth:
    runs-on: windows-2019
    steps:
    - name: Cache msys2
      uses: actions/cache@main
      id: msys2
      with:
        path: D:\msys64
        key: msys2
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
      run: |
        cd vapoursynth; makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: vapoursynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Delete Dev
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vapoursynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vapoursynth/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vapoursynth/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vulkan:
    runs-on: windows-2019
    steps:
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20231222_13.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: Config msys2
      run: |
        cp msys2-config/makepkg_mcf.conf /etc
        cp msys2-config/makepkg-mcf /usr/bin
    - name: Build
      env:
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      run: |
        cd vulkan-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg-mcf -sLf
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vulkan*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vulkan-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
